{% extends 'base.html.twig' %}

{% block title %}Dashboard{% endblock %}

{% block stylesheets %}
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <style>
        body {
            background-color: #f8f9fa;
        }
        .blue-bg {
            background-color: #0a4174;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: flex-start;
            margin-top: 20px;
            padding-left: 50px;
            color: white;
            position: relative;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .blue-bg h1 {
            margin: 0;
        }
        .info-cards {
            margin-top: 30px;
        }
        .box {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        .chart-container {
            position: relative;
            height: 300px;
            width: 300px;
        }
        #map {
            position: relative;
            z-index: 0;
        }
        #sidebar {
            display: none;
            position: absolute;
            top: 0;
            right: 0;
            width: 25%;
            height: 100%;
            background-color: white;
            z-index: 1;
            padding: 15px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="blue-bg">
                <h1>Welcome</h1>
                <img src="{{ asset('scouts.png') }}" style="position: absolute; right: 20px; top: -20px;">
            </div>
        </div>
    </div>
    <section class="statis mt-3 text-center">
        <div class="row">
            <div class="col-md-6 col-lg-4 mb-4 mb-lg-0">
                <div class="box p-3">
                    <h3>{{ totalMembres }}</h3>
                    <p class="lead">Membres</p>
                </div>
            </div>
            <div class="col-md-6 col-lg-4 mb-4 mb-lg-0">
                <div class="box p-3">
                    <h3>{{ totalGroupeUnite }}</h3>
                    <p class="lead">Groupes d'unités</p>
                </div>
            </div>
            <div class="col-md-6 col-lg-4 mb-4 mb-md-0">
                <div class="box p-3">
                    <h3>{{ totalUnite }}</h3>
                    <p class="lead">Unités</p>
                </div>
            </div>
        </div>
    </section>
    
    <div class="row mt-4">
        <div class="col-md-4">
            <div class="box p-3">
                <h2>Nombre de membres par branche :</h2>
                <div class="chart-container">
                    <canvas id="membresParBrancheChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="box p-3">
                <div id="map" style="height: 500px;"></div>
                <div id="sidebar">
                    <h2>Unités dans le groupe sélectionné :</h2>
                    <div id="sidebar-content"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    {% autoescape 'js' %}
    var membresParBrancheData = JSON.parse('{{ membresParBranche|json_encode|raw }}');
    {% endautoescape %}
    
    var labels = membresParBrancheData.map(data => `${data.branche} (${data.percentage}%)`);
    var data = membresParBrancheData.map(data => data.total);

var ctx = document.getElementById('membresParBrancheChart').getContext('2d');
var membresParBrancheChart = new Chart(ctx, {
    type: 'doughnut',
    data: {
        labels: labels,
        datasets: [{
            label: 'Membres',
            data: data,
            backgroundColor: [
                '#00a0dd',
                '#296f52',
                '#004f9e',
                '#d4021d',
            ],
            hoverBackgroundColor: [
                '#00a0dd',
                '#296f52',
                '#004f9e',
                '#d4021d',
            ]
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                display: true,
                position: 'bottom'
            }
        }
    }
});

var map = L.map('map').setView([50.8503, 4.3517], 7);
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '© OpenStreetMap contributors'
}).addTo(map);

{% for groupe in groupeUnite %}
    fetch(`https://nominatim.openstreetmap.org/search?format=json&q={{ groupe.name }}, Belgium`)
        .then(response => response.json())
        .then(data => {
            if (data.length > 0) {
                var latLng = [data[0].lat, data[0].lon];
                var marker = L.marker(latLng)
                    .addTo(map)
                    .bindPopup(`<b>{{ groupe.name }}</b>`)
                    .on('click', function () {
                        fetch(`/dashboard/unites/{{ groupe.id }}`)
                            .then(response => response.json())
                            .then(data => {
                                var sidebarContent = '<ul>';
                                data.forEach(unitName => {
                                    sidebarContent += `<li>${unitName}</li>`;
                                });
                                sidebarContent += '</ul>';
                                document.getElementById('sidebar-content').innerHTML = sidebarContent;
                                document.getElementById('sidebar').style.display = 'block';
                            })
                            .catch(error => console.error('Error fetching unit names:', error));
                    });
            } else {
                console.error('No data found for:', '{{ groupe.name }}');
            }
        })
        .catch(error => console.error('Error with geocoding:', error));
{% endfor %}
</script>
{% endblock %}
